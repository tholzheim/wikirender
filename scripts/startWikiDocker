#!/bin/bash
#
# Starts a mediawiki (with semantic mediawiki extension) in a docker
#

#
# get a pymediawiki docker copy
#
installAndGetMediaWikiDocker() {
  local l_wikiVersion="$1"
  pip install -U pymediawikidocker
  mwcluster --forceRebuild --versionList $l_wikiVersion --smwVersion 3.2.3 \
     --basePort 8000 --sqlBasePort 7999 --wikiIdList wikirenderTest \
     --extensionList "Admin Links"  "BreadCrumbs2" "Cargo" "CategoryTree" \
      "ConfirmAccount" "ConfirmEdit" "Data Transfer" "Header Tabs" \
      "ImageMap", "InputBox" "LanguageSelector" "MagicNoCache" "Maps7" "Nuke" "Page Forms" \
      "ParserFunctions" "PDFEmbed" "Renameuser" "Replace Text" "Semantic Result Formats" "SyntaxHighlight" \
      "TitleBlacklist"  "UrlGetParameters" "Variables"
  pip install -U py-3rdparty-mediawiki
}

#
# install docker compose CLI plugin (if needed)
# this is just a temporary workaround until docker integrates the new V2 composer cli-plugin into the standard
# installation procedure
#
installDockerCompose() {
  docker  2>&1 | grep compose
  if [ $? -ne 0 ]
  then
    echo "Installing Docker Compose CLI"
    docker --version
     cliplugindir=$HOME/.docker/cli-plugins
     mkdir -p $cliplugindir
     cd $cliplugindir
     wget https://github.com/docker/compose-cli/releases/download/v2.0.0-beta.3/docker-compose-linux-amd64
     mv  docker-compose-linux-amd64 docker-compose

     chmod +x docker-compose
    # check result
     ls -l
     docker
     docker  2>&1 | grep compose
  fi
}

# commandline option
while [[ $# -gt 0 ]]; do
  key="$1"

  case $key in
    -v|--wikiVersion)
      WIKI_VERSION="$2"
      shift # past argument
      shift # past value
      ;;
  esac
done
if [ "$WIKI_VERSION" = "" ]
then
  WIKI_VERSION="1.31.14"
fi

installDockerCompose
installAndGetMediaWikiDocker $WIKI_VERSION
